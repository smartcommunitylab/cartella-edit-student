image: docker:19

services:
  - docker:dind

stages:
  - test
  - build
  - container-build
  - container-scan
  - deploy

variables:
  SECURE_LOG_LEVEL: info
  DOCKER_DRIVER: overlay
  CONTAINER_IMAGE_FRONTEND: smartcommunitylab/cartella-studente:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
  MAVEN_CLI_OPTS: -DskipTests --batch-mode

fronted-container-build:
  stage: container-build
  script:
    - docker login -u $DHUB_USER -p $DHUB_PASS
    - DOCKER_BUILDKIT=1 docker build --build-arg ENVIRONMENT=$CI_COMMIT_REF_NAME  -f Dockerfile -t $CONTAINER_IMAGE_FRONTEND .
    - docker push $CONTAINER_IMAGE_FRONTEND
  only:
    - demo
    - test

include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

gemnasium-dependency_scanning:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "demo"'
      when: always

spotbugs-sast:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "demo"'
      when: always

container_scanning:
  stage: container-scan
  variables:
    DOCKER_IMAGE: smartcommunitylab/cartella-studente:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    DOCKERFILE_PATH: "Dockerfile"
    GIT_STRATEGY: fetch
    DOCKER_USER: ""
    DOCKER_PASSWORD: ""
  rules:
    - if: '$$CI_COMMIT_REF_NAME == "demo"'
      when: always

frontend-deploy:
  stage: deploy
  image: smartcommunitylab/kubectl-alpine:latest
  environment:
    name: develop
  script:
    - echo "deploy frontend"
    - kubectl -n cartella set image deployments/cartella-studente-$CI_COMMIT_REF_NAME cartella-studente-$CI_COMMIT_REF_NAME=$CONTAINER_IMAGE_FRONTEND --record=true
    - kubectl -n cartella rollout status deployment cartella-studente-$CI_COMMIT_REF_NAME
  only:
    - dev
    - demo
